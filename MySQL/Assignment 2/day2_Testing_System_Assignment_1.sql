DROP DATABASE IF EXISTS Testing_System_Assignmen;
CREATE DATABASE Testing_System_Assignmen;

USE Testing_System_Assignmen;

CREATE TABLE Department (
DepartmentID 				MEDIUMINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
DepartmentName 				NVARCHAR(50) NOT NULL UNIQUE KEY
);

CREATE TABLE `Position` (
PositionID					MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
PositionName				ENUM('Dev','Test','Scrum Master','PM') NOT NULL UNIQUE KEY
);

CREATE TABLE `Account` (
AccountID					MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Email 						NVARCHAR(100) NOT NULL UNIQUE KEY,
Username 					NVARCHAR(50) NOT NULL UNIQUE KEY,
FullName					NVARCHAR(50) NOT NULL,
DepartmentID 				MEDIUMINT UNSIGNED NOT NULL,
PositionID 					MEDIUMINT UNSIGNED NOT NULL, 
CreateDate 					DATETIME DEFAULT NOW(),
							FOREIGN KEY(DepartmentID) REFERENCES Department(DepartmentID),
							FOREIGN KEY(PositionID) REFERENCES `Position`(PositionID)
);

CREATE TABLE `Group` (
GroupID 					MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
GroupName					NVARCHAR(100) NOT NULL,
CreatorID 					MEDIUMINT UNSIGNED NOT NULL UNIQUE KEY,
CreateDate 					DATETIME DEFAULT NOW(),
							FOREIGN KEY(CreatorID) REFERENCES `Account`(AccountID)
);

CREATE TABLE `GroupAccoun` (
GroupID 					MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
AccountID 					MEDIUMINT UNSIGNED NOT NULL UNIQUE KEY,
JoinDate 					DATETIME DEFAULT NOW(),
							FOREIGN KEY(AccountID) REFERENCES `Account`(AccountID)
);

CREATE TABLE `TypeQuestio` (
TypeID 						MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
TypeName 					NVARCHAR(100) NOT NULL
);

CREATE TABLE `CategoryQuestion` (
CategoryID 					MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
CategoryName 				NVARCHAR(100) NOT NULL
);

CREATE TABLE `Question` (
QuestionID 					MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Content 					NVARCHAR(100) NOT NULL,
CategoryID 					MEDIUMINT UNSIGNED NOT NULL,
TypeID 						MEDIUMINT UNSIGNED NOT NULL,
CreatorID 					MEDIUMINT UNSIGNED NOT NULL UNIQUE KEY, 
CreateDate	 				DATETIME DEFAULT NOW(),
							FOREIGN KEY(CreatorID) REFERENCES `Group`(CreatorID)

);

CREATE TABLE `Answer` (
AnswerID 					MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Content 					NVARCHAR(100) NOT NULL,
QuestionID 					MEDIUMINT UNSIGNED NOT NULL,
isCorrec 					ENUM('TRUE', 'FALSE'),
							FOREIGN KEY(QuestionID) REFERENCES `Question`(QuestionID)
);

CREATE TABLE `Exam` (
ExamID 						MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
`Code` 						MEDIUMINT UNSIGNED NOT NULL UNIQUE KEY,
Title 						NVARCHAR(100) NOT NULL,
CategoryID 					MEDIUMINT UNSIGNED NOT NULL UNIQUE KEY,
Duration 					DATETIME DEFAULT NOW(),
CreatorID 					MEDIUMINT UNSIGNED NOT NULL UNIQUE KEY,
CreateDate 					DATETIME DEFAULT NOW()
);

CREATE TABLE `ExamQuestion`(
ExamID 						MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
QuestionID 					MEDIUMINT UNSIGNED NOT NULL UNIQUE KEY,
							FOREIGN KEY(ExamID) REFERENCES `Exam`(ExamID),
							FOREIGN KEY(QuestionID) REFERENCES `Answer`(QuestionID)
);